type: edu
files:
- name: src/crossword/Main.java
  visible: true
  text: |-
    package crossword;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: src/crosswordScrabble.json
  visible: true
  learner_created: false
- name: src/crosswordScrabble.txt
  visible: true
  text: |-
    eaMgria Maria 4 9 ACR Grama 7 5 ACR Marriage 9 2 ACR Grime 11 2 ACR Mega 9 2 DWN Imager 4 5 DWN Mirage 4 9 DWN
    Playfull Play 4 10 ACR Lapful 7 5 ACR Fully 10 3 ACR Layup 13 7 ACR Pull 4 10 DWN Playful 7 7 DWN Yap 11 11 DWN Flu 10 3 DWN
    Edition Edition 5 7 ACR Iodine 9 7 ACR Noted 10 3 ACR ident 12 5 ACR End 7 10 ACR Tenioid 4 7 DWN Dent 9 9 DWN die 7 12 DWN ion 5 11 DWN
    Friends Fined 4 9 ACR Fern 8 6 ACR Serif 10 9 ACR Fed 8 6 DWN Friends 4 9 DWN Den 4 13 DWN Fired 10 13 DWN
    Deliver Devil 3 4 ACR Liver 5 6 ACR Relieved 9 4 ACR reived 11 10 ACR Delied 3 4 DWN Lever 3 7 DWN Elder 9 5 DWN Derive 9 10 DWN
    Sparrow Roars 6 4 ACR Pows 7 8 ACR Arrow 9 7 ACR raws 10 11 ACR warps 12 8 ACR swap 9 1 ACR Rasp 6 4 DWN wraps 9 11 DWN Sparrow 6 8 DWN
    Dancing Acid 8 10 ACR Caning 10 10 ACR Cain 12 7 ACR Gain 11 8 DWN Dancing 7 10 DWN Nag 10 14 DWN
    Futuresl Turf 4 9 ACR Future 7 4 ACR Fuse 12 5 ACR Rut 10 2 ACR Fret 7 4 DWN Left 4 6 DWN Uterus 7 7 DWN True 4 9 DWN
    Sconced Second 3 9 ACR Once 5 9 ACR Conned 7 9 ACR Nodes 9 7 ACR Send 13 4 ACR Nosed 9 7 DWN sconced 3 9 DWN Cones 5 11 DWN
    Lengthy Gent 6 12 ACR Lent 10 12 ACR then 8 9 ACR lengthy 11 6 ACR leg 11 6 DWN Gel 11 9 DWN Gently 6 12 DWN
  learner_created: false
- name: src/scrabbleTilesDistribution.txt
  visible: true
  text: |-
    A 9
    B 2
    C 2
    D 4
    E 12
    F 2
    G 3
    H 2
    I 9
    J 1
    K 1
    L 4
    M 2
    N 6
    O 8
    P 2
    Q 1
    R 6
    S 4
    T 6
    U 4
    V 2
    W 2
    X 1
    Y 2
    Z 1
    * 2
  learner_created: false
- name: test/scrabbleTilesDistribution_1.txt
  visible: false
  text: |-
    A 9
    B 12
    C 2
    D 4
    E 12
    F 2
    G 3
    H 2
    I 9
    J 1
    K 1
    L 4
    M 2
    N 6
    O 8
    P 2
    Q 1
    R 6
    S 4
    T 6
    U 4
    V 2
    W 2
    X 1
    Y 2
    Z 1
    * 2
  learner_created: false
- name: test/scrabbleTilesDistribution_2.txt
  visible: false
  text: |
    A 9
    B 2
    C 2
    D 4
    E 12
    F 2
    G 3
    H 2
    I 9
    J 1
    K 1
    L 4
    M 2
    N 6
    O 8
    P 2
    Q 1
    R 6
    S 4
    T 6
  learner_created: false
- name: test/scrabbleTilesDistribution_3.txt
  visible: false
  text: |-
    A 9
    B 2
    C 2
    D 4
    E 16
    F 2
    G 3
    H 2
    I 9
    J 1
    K 1
    L 4
    M 2
    N 6
    O 8
    P 2
    Q 1
    R 6
    S 4
    T 6
    U 4
    V 2
    W 2
    X 1
    Y 2
    Z 1
    * 2
  learner_created: false
- name: test/scrabbleTilesDistribution_4.txt
  visible: false
  text: |-
    A 9
    B 2
    C 2
    D 4
    E 12
    F 2
    G 3
    H 2
    I 9
    J 1
    K 1
    L 4
    M 2
    N 6
    O 8
    P 200
    Q 1
    R 6
    S 4
    T 6
    U 4
    V 2
    W 2
    X 1
    Y 2
    Z 1
    * 2
  learner_created: false
- name: test/Stage1Test.java
  visible: false
  text: |-
    import org.hyperskill.hstest.dynamic.DynamicTest;
    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.io.File;
    import java.util.ArrayList;

    public class Stage1Test extends StageTest {
        @DynamicTest
        CheckResult test1() {
            TestedProgram pr = new TestedProgram();
            String output = pr.start("./src/scrabbleTilesDistribution.txt");
            String[] p1 = output.trim().replace(System.getProperty("line.separator")+System.getProperty("line.separator"),"\n").split("\n");
            ArrayList<String> p = new ArrayList<>();
            for (String s : p1) {
                if (s.trim().length() != 0) {
                    p.add(s);
                }
            }
            if(p.size()<2){
                throw new WrongAnswer("""
                        Your output is not formatted correctly. It should be as follows:
                        "Welcome to Crossword Scrabble
                        Bag: 'tiles distribution'\"""");
            }
            if(!p.get(0).toLowerCase().trim().contains("Welcome to Crossword Scrabble".toLowerCase())){
                throw new WrongAnswer("Your output should contain the game tittle " +
                        "\"Welcome to Crossword Scrabble\"");
            }
            if (!p.get(1).startsWith("Bag: ") ){
                throw new WrongAnswer("Your output for bag should start with " +
                        "\"Bag: \",");
            }
            if (p.get(1).length()< 105){
                throw new WrongAnswer("Your have less tiles than expected ");
            }
            if (p.get(1).length() > 105){
                throw new WrongAnswer("Your have more tiles than expected.");
            }
            if (!p.get(1).contains("AAAAAAAAABBCCDDDDEEEEEEEEEEEEFFGGGHHIIIIIIIIIJKLLLLMMNNNNNNOOOOOOOOPPQRRRRRRSSSSTTTTTTUUUUVVWWXYYZ**") ){
                throw new WrongAnswer("Your bag contains wrong tiles distribution ");
            }

            //output = pr.execute("Line1\nLine2\nline3\n");
            return CheckResult.correct();
        }
        Object[][] wrongFiles =  {
                {"./test/scrabbleTilesDistribution_1.txt"},
                {"./test/scrabbleTilesDistribution_2.txt"},
                {"./test/scrabbleTilesDistribution_3.txt"},
                {"./test/scrabbleTilesDistribution_4.txt"}
        };
        @DynamicTest(data = "wrongFiles")
        CheckResult test6( String message) {
            String bag ="AAAAAAAAABBCCDDDDEEEEEEEEEEEEFFGGGHHIIIIIIIIIJKLLLLMMNNNNNNOOOOOOOOPPQRRRRRRSSSSTTTTTTUUUUVVWWXYYZ**";
            TestedProgram pr2 = new TestedProgram();
            String output = pr2.start(message);
            if(output.contains(bag)){
                throw new WrongAnswer("You program is not reading the correct file.");
            }
            return CheckResult.correct();
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/275/stages/1393/implement#comment
status: Unchecked
record: -1
